<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://seb/content/css/seb.css" type="text/css"?>
<!DOCTYPE window [
	<!ENTITY % sebDtdLocal SYSTEM "chrome://seb/locale/seb.dtd">
	%sebDtdLocal;
	<!ENTITY % sebDtdConst SYSTEM "chrome://seb/content/seb.dtd">
	%sebDtdConst;
	<!ENTITY % browserDTD SYSTEM "chrome://browser/locale/browser.dtd" >
	%browserDTD;
	<!ENTITY % baseMenuDTD SYSTEM "chrome://browser/locale/baseMenuOverlay.dtd" >
	%baseMenuDTD;
]>
<window id="sebWindow" 
	title="&seb.title;" 
	windowtype="main" 
	baseurl=""
	sizemode="maximized"
	width="1"
	height="1"
	accelerated="true"
	onload="seb.onload(this);" 
	onunload="seb.onunload(this);" 
	onclose="seb.onclose(this)" 
	xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">	
	<script type="application/x-javascript"> 
		const 	{ classes: Cc, interfaces: Ci, results: Cr, utils: Cu } = Components;
		Cu.import("resource://gre/modules/XPCOMUtils.jsm");
		XPCOMUtils.defineLazyModuleGetter(this,"seb","resource://modules/seb.jsm","seb");
		XPCOMUtils.defineLazyModuleGetter(this,"sw","resource://modules/SebWin.jsm","SebWin");
		XPCOMUtils.defineLazyModuleGetter(this,"sb","resource://modules/SebBrowser.jsm","SebBrowser");
		XPCOMUtils.defineLazyModuleGetter(this,"sh","resource://modules/SebHost.jsm","SebHost");
	</script>
	<stringbundleset>
		<stringbundle id="locale" src="chrome://seb/locale/seb.properties" />
		<stringbundle id="const" src="chrome://seb/content/seb.properties" />
	</stringbundleset>
	<!-- commands -->
	<commandset id="sebCommandSet">	
		<command id="sebCmdQuit" oncommand="seb.quit();"/>
		<command id="sebCmdReload" oncommand="seb.reload(window);"/>
		<command id="sebCmdRestart" oncommand="sb.restart();"/>
		<command id="sebCmdBack" oncommand="sb.back(window);"/>
		<command id="sebCmdForward" oncommand="sb.forward(window);"/>
		<command id="sebCmdShowAll" oncommand="sw.showAll();"/>
		<command id="sebCmdShowContent" oncommand="sw.showContent(window,true);"/>
		<command id="sebCmdShowServer" oncommand="sw.showServer(window,true);"/>
		<command id="sebCmdShowMessage" oncommand="sw.showMessage(window,true);"/>
		<command id="sebCmdShutdown" oncommand="sh.shutdownKey();"/>
		<command id="sebCmdReboot" oncommand="sh.rebootKey();"/>
		<command id="sebCmdRestart" oncommand="sb.restart();"/>
		<command id="sebCmdToggleSpellCheckEnabled" oncommand="sb.toggleSpellCheckEnabled(window);"/>
	</commandset>
	<audio xmlns="http://www.w3.org/1999/xhtml" id="seb.snapshot" src="chrome://seb/content/sounds/snapshot.ogg" preload="auto"></audio>
	<!-- keysets -->
	<keyset id="sebKeySet">
		<key id="seb.quit" keycode="VK_F4" modifiers="control shift" command="sebCmdQuit"/>
		<key id="seb.reload" keycode="VK_F5" modifiers="" command="sebCmdReload"/>
		<key id="seb.restart" keycode="VK_F9" modifiers="control shift" command="sebCmdRestart"/>
		<key id="seb.back" keycode="VK_LEFT" modifiers="control shift" command="sebCmdBack"/>
		<key id="seb.forward" keycode="VK_RIGHT" modifiers="control shift" command="sebCmdForward"/>
		<!--
		<key id="seb.showall" keycode="VK_F1" command="sebCmdShowAll"/>
		<key id="seb.showcontent" key="1" modifiers="control" command="sebCmdShowContent"/>
		<key id="seb.showserver" key="2" modifiers="control" command="sebCmdShowServer"/>
		<key id="seb.showmessage" key="3" modifiers="control" command="sebCmdShowMessage"/>
		-->
		<key id="seb.reboot" keycode="VK_F10" modifiers="control alt shift" command="sebCmdReboot"/>
		<key id="seb.shutdown" keycode="VK_F12" modifiers="control alt shift" command="sebCmdShutdown"/>
	</keyset>
	<menupopup id="spellCheckMenu" onpopuphiding="if (event.target != this) { return }; sb.spellCheckClosed();">
		<menuitem id="spell-no-suggestions"
			disabled="true"
			label="&spellNoSuggestions.label;" 
			hidden="true" />
                <menuseparator id="sep-enabled" hidden="true" />
		<menuitem id="spell-check-enabled"
			label="&spellCheckToggle.label;"
			type="checkbox" 
			checked = "false"
			command = "sebCmdToggleSpellCheckEnabled" />
		<menu id="spell-dictionaries" label="&spellDictionaries.label;" hidden="true">
			<menupopup id="spell-dictionaries-menu" onpopupshowing="sb.createDictionaryList(this);" onpopuphiding="if (event.target != this) { return }; sb.clearDictionaryList(this);">
			</menupopup>
		</menu>
	</menupopup>
	<stack id="browser.stack" flex="1">
		<vbox flex="1">
			<hbox id="toolBar" class="tbHidden">
				<!--
				<image class="tbBtn" id="btnQuit" src="chrome://seb/content/images/quit.png" onclick="seb.quit();" />
				<image class="tbBtn" id="btnRestart" src="chrome://seb/content/images/restart.png" onclick="sb.restart();" />
				-->
				<hbox id="imageBox" class="tbHidden">
					<image tooltiptext="&seb.toolbar.back;" class="tbBtn hidden" id="btnBack" src="chrome://seb/content/images/back.png" onclick="sb.back(window)" />
					<image tooltiptext="&seb.toolbar.forward;" class="tbBtn hidden" id="btnForward" src="chrome://seb/content/images/forward.png" onclick="sb.forward(window)" />
					<image tooltiptext="&seb.toolbar.reload;" class="tbBtn hidden" id="btnReload" src="chrome://seb/content/images/reload.png" onclick="seb.reload(window);"/>
				</hbox>
				<!--
				<textbox class="hidden" id="locationBar" type="autocomplete" flex="1" placeholder="location" autocompletesearch="history"></textbox>
				-->
			</hbox>
			<spacer></spacer>
			<deck id="deckContents" selectedIndex="0" flex="1">
				<browser flex="1" id="seb.browser" type="content-primary" />
				<browser flex="1" id="sebserver.socket" src="about:blank" type="content-targetable"></browser>
				<browser flex="1" id="message.socket" src="about:blank" type="content-targetable"></browser>
			</deck>
		</vbox>
		<vbox id="loadingBox" class="hidden loadingBox">
			<hbox>
				<spacer></spacer>
				<image id="loadingImage" src="chrome://seb/content/images/loading.gif" />
			</hbox>
		</vbox>
	</stack>
</window>
